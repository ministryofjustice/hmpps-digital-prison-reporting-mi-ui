version: 2.1

orbs:
  hmpps: ministryofjustice/hmpps@7
  slack: circleci/slack@4.12.1
  owasp: entur/owasp@0.0.19
  mem: circleci/rememborb@0.0.2

parameters:
  alerts-slack-channel:
    type: string
    default: dpr_cicd_alerts

  releases-slack-channel:
    type: string
    default: dpr_cicd_approvals

  node-version:
    type: string
    default: 22.12-browsers

jobs:
  build:
    executor:
      name: hmpps/node
      tag: << pipeline.parameters.node-version >>
    steps:
      - checkout
      - run:
          name: Update npm
          command: 'sudo npm install -g npm@latest'
      - restore_cache:
          key: dependency-cache-{{ checksum "package-lock.json" }}
      - run:
          name: Install Dependencies
          command: npm ci --no-audit
      - save_cache:
          key: dependency-cache-{{ checksum "package-lock.json" }}
          paths:
            - node_modules
            - ~/.cache
      - run:
          name: Build and upload new sourcemaps linked to git ref
          command: |
            export GIT_REF="$CIRCLE_SHA1"
            npm run build
            npm run sentry:sourcemaps -- -r $GIT_REF
            DATE=$(date '+%Y-%m-%d')
            export BUILD_NUMBER=${DATE}.${CIRCLE_BUILD_NUM}
            npm run record-build-info
      - run:
          # Run linter after build because the integration test code depend on compiled typescript...
          name: Linter check
          command: npm run lint
      - persist_to_workspace:
          root: .
          paths:
            - node_modules
            - build-info.json
            - build
            - dist
            - .cache/Cypress

  update_sentry_git_ref_secret:
    executor:
      name: hmpps/node
      tag: << pipeline.parameters.node-version >>
    steps:
      - run:
          name: Install kubectl and update sentry git ref secret
          command: |
            export GIT_REF="$CIRCLE_SHA1"

            # Install kubectl
            curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/arm64/kubectl"
            curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/arm64/kubectl.sha256"
            check=$(echo "$(cat kubectl.sha256)  kubectl" | sha256sum --check)
            if [[ "$check" != "kubectl: OK" ]]; then
              exit 1
            fi
            sudo install -o root -g root -m 0755 kubectl /usr/local/bin/kubectl

            # Update the sentry secret to have the git ref in
            echo -n ${KUBE_ENV_CACERT} | base64 -d > ./ca.crt
            kubectl config set-cluster ${KUBE_ENV_NAME} --certificate-authority=./ca.crt --server=${KUBE_ENV_API}
            kubectl config set-credentials circleci --token=$(echo -n ${KUBE_ENV_TOKEN} | base64 -d)
            kubectl config set-context ${KUBE_ENV_NAME} --cluster=${KUBE_ENV_NAME} --user=circleci --namespace=${KUBE_ENV_NAMESPACE}
            kubectl config use-context ${KUBE_ENV_NAME}
            kubectl --namespace=${KUBE_ENV_NAMESPACE} get pods
            kubectl -n $KUBE_ENV_NAMESPACE get secrets/hmpps-digital-prison-reporting-mi-ui-sentry -o json | jq '.data["RELEASE_GIT_SHA"]="'$(echo -n ${GIT_REF} | base64 -w 0)'"' | kubectl apply -f -
            rm kubectl  kubectl.sha256 /usr/local/bin/kubectl
            rm -rf ~/.kube .kube

  unit_test:
    executor:
      name: hmpps/node
      tag: << pipeline.parameters.node-version >>
    steps:
      - checkout
      - restore_cache:
          key: dependency-cache-{{ checksum "package-lock.json" }}
      - run:
          name: unit tests
          command: npm run test:ci
      - store_test_results:
          path: test_results
      - store_artifacts:
          path: test_results/unit-test-reports.html

  integration_test:
    executor:
      name: hmpps/node_redis
      node_tag: << pipeline.parameters.node-version >>
      redis_tag: '7.0'
    steps:
      - checkout
      - attach_workspace:
          at: ~/app
      - run:
          name: Install missing OS dependency
          command: sudo apt-get install libxss1
      - restore_cache:
          key: dependency-cache-{{ checksum "package-lock.json" }}
      - run:
          name: Get wiremock
          command: curl -o wiremock.jar https://repo1.maven.org/maven2/com/github/tomakehurst/wiremock-standalone/2.27.1/wiremock-standalone-2.27.1.jar
      - run:
          name: Run wiremock
          command: java -jar wiremock.jar --port 9091
          background: true
      - run:
          name: Run the node app.
          command: npm run start-feature
          background: true
      - run:
          name: Wait for node app to start
          command: sleep 5
      - run:
          name: integration tests
          command: npm run int-test
      - store_test_results:
          path: test_results
      - store_artifacts:
          path: cypress-tests/integration-tests/videos
      - store_artifacts:
          path: cypress-tests/integration-tests/screenshots

  acceptance_test:
    executor:
      name: hmpps/node_redis
      node_tag: << pipeline.parameters.node-version >>
      redis_tag: '7.0'
    circleci_ip_ranges: true
    steps:
      - checkout
      - attach_workspace:
          at: ~/app
      - run:
          name: Install missing OS dependency
          command: sudo apt-get install libxss1
      - restore_cache:
          key: dependency-cache-{{ checksum "package-lock.json" }}
      - run:
          name: Ensure old pods have spun down
          command: sleep 30
      - run:
          name: acceptance tests
          command: npm run acceptance-test
      - store_test_results:
          path: test_results
      - store_artifacts:
          path: cypress-tests/acceptance-tests/videos
      - store_artifacts:
          path: cypress-tests/acceptance-tests/screenshots

  remember-app-version:
    executor:
      name: hmpps/node
      tag: << pipeline.parameters.node-version >>
    steps:
      - mem/remember:
          env_var: APP_VERSION
          value: 'Build.${CIRCLE_SHA1}'

workflows:
  version: 2
  build-test-and-deploy:
    jobs:
      - build:
          filters:
            tags:
              ignore: /.*/
      - unit_test:
          requires:
            - build
      - integration_test:
          requires:
            - build
      - hmpps/helm_lint:
          name: helm_lint
      - hmpps/build_docker:
          name: build_docker
          additional_docker_tag: 'Build.${CIRCLE_SHA1}'
          filters:
            branches:
              only:
                - main
      - remember-app-version:
          name: remember-version-for-dev
          requires:
            - build_docker
      - hmpps/deploy_env:
          name: deploy_dev
          env: 'dev'
          jira_update: true
          release_name: PROJECT_NAME_ENV_NAME
          context:
            - hmpps-common-vars
            - hmpps-digital-prison-reporting-mi-dev
          filters:
            branches:
              only:
                - main
          requires:
            - helm_lint
            - unit_test
            - integration_test
            - remember-version-for-dev
          helm_timeout: 5m
      - update_sentry_git_ref_secret:
          name: update_sentry_git_ref_secret_dev
          requires:
            - deploy_dev
          context:
            - hmpps-common-vars
            - hmpps-digital-prison-reporting-mi-dev
      - acceptance_test:
          requires:
            - deploy_dev
          context:
            - hmpps-digital-prison-reporting-mi-auth
      - request-test-approval:
          type: approval
          requires:
            - acceptance_test
      - remember-app-version:
          name: remember-version-for-test
          requires:
            - request-test-approval
      - hmpps/deploy_env:
          name: deploy_test
          env: 'test'
          jira_update: true
          release_name: PROJECT_NAME_ENV_NAME
          context:
            - hmpps-common-vars
            - hmpps-digital-prison-reporting-mi-test
          requires:
            - remember-version-for-test
          helm_timeout: 5m
      - update_sentry_git_ref_secret:
          name: update_sentry_git_ref_secret_test
          requires:
            - deploy_test
          context:
            - hmpps-common-vars
            - hmpps-digital-prison-reporting-mi-test
      - request-preprod-approval:
          type: approval
          requires:
            - acceptance_test
      - remember-app-version:
          name: remember-version-for-preprod
          requires:
            - request-preprod-approval
      - hmpps/deploy_env:
          name: deploy_preprod
          env: 'preprod'
          jira_update: true
          jira_env_type: staging
          release_name: PROJECT_NAME_ENV_NAME
          context:
            - hmpps-common-vars
            - hmpps-digital-prison-reporting-mi-preprod
          requires:
            - remember-version-for-preprod
          helm_timeout: 5m
      - update_sentry_git_ref_secret:
          name: update_sentry_git_ref_secret_preprod
          requires:
            - deploy_preprod
          context:
            - hmpps-common-vars
            - hmpps-digital-prison-reporting-mi-preprod
      - request-prod-approval:
          type: approval
          requires:
            - deploy_preprod
      - remember-app-version:
          name: remember-version-for-prod
          requires:
            - request-prod-approval
      - hmpps/deploy_env:
          name: deploy_prod
          env: 'prod'
          jira_update: true
          jira_env_type: production
          slack_notification: true
          slack_channel_name: << pipeline.parameters.releases-slack-channel >>
          release_name: PROJECT_NAME_ENV_NAME
          context:
            - hmpps-common-vars
            - hmpps-digital-prison-reporting-mi-prod
          requires:
            - remember-version-for-prod
          helm_timeout: 5m
      - update_sentry_git_ref_secret:
          name: update_sentry_git_ref_secret_prod
          requires:
            - deploy_prod
          context:
            - hmpps-common-vars
            - hmpps-digital-prison-reporting-mi-prod

  security:
    triggers:
      - schedule:
          cron: '8 4 * * 1-5'
          filters:
            branches:
              only:
                - main
    jobs:
      - hmpps/npm_outdated:
          slack_channel: << pipeline.parameters.alerts-slack-channel >>
          dependencies_to_check: typescript
          context:
            - hmpps-common-vars
      - hmpps/npm_security_audit:
          slack_channel: << pipeline.parameters.alerts-slack-channel >>
          context:
            - hmpps-common-vars
      - owasp/commandline_owasp_dependency_check:
          context: global
      - hmpps/trivy_latest_scan:
          slack_channel: << pipeline.parameters.alerts-slack-channel >>
          context:
            - hmpps-common-vars
      - hmpps/veracode_pipeline_scan:
          slack_channel: << pipeline.parameters.alerts-slack-channel >>
          context:
            - veracode-credentials
            - hmpps-common-vars
  security-weekly:
    triggers:
      - schedule:
          cron: '14 4 * * 1'
          filters:
            branches:
              only:
                - main
    jobs:
      - hmpps/veracode_policy_scan:
          slack_channel: << pipeline.parameters.alerts-slack-channel >>
          context:
            - veracode-credentials
            - hmpps-common-vars
