generic-service:
  nameOverride: hmpps-digital-prison-reporting-mi-ui

  replicaCount: 4

  image:
    repository: quay.io/hmpps/hmpps-digital-prison-reporting-mi-ui
    tag: app_version # override at deployment time
    port: 3000

  ingress:
    enabled: true
    host: app-hostname.local # override per environment
    tlsSecretName: hmpps-digital-prison-reporting-mi-cert
    modsecurity_enabled: true
    modsecurity_audit_enabled: false
    modsecurity_snippet: |
      SecRuleEngine On
      # Limit permitted HTTP methods.
      SecAction "id:900200,phase:1,nolog,pass,t:none,setvar:tx.allowed_methods=GET POST OPTIONS"
      # This grants access to the OpenSearch logs to delve into the cause of the blockage.
      SecDefaultAction "phase:2,pass,log,tag:github_team=hmpps-digital-prison-reporting"
      SecDefaultAction "phase:4,pass,log,tag:github_team=hmpps-digital-prison-reporting"
      # This disables the Remote Command Execution: Windows Command Injection rule, since we do not use Windows and it was flagging a false positive. 
      SecRuleRemoveById 932110
      # Change default denial to be a 406 so that we can tell easily that it is modsecurity doing the blocking.
      SecRuleUpdateActionById 949110 "t:none,deny,status:406,logdata:%{SERVER_NAME}"
      SecRuleUpdateActionById 959100 "t:none,deny,status:406,logdata:%{SERVER_NAME}"
    annotations:
      nginx.ingress.kubernetes.io/proxy-read-timeout: "360"
      nginx.ingress.kubernetes.io/proxy-body-size: 100m
      nginx.ingress.kubernetes.io/server-snippet: |
        client_max_body_size 100m;

  livenessProbe:
    httpGet:
      path: /ping

  readinessProbe:
    httpGet:
      path: /ping

  # Environment variables to load into the deployment
  env:
    NODE_ENV: "production"
    TOKEN_VERIFICATION_ENABLED: "true"
    REDIS_TLS_ENABLED: "true"
    APPLICATIONINSIGHTS_CONNECTION_STRING: "InstrumentationKey=$(APPINSIGHTS_INSTRUMENTATIONKEY);IngestionEndpoint=https://northeurope-0.in.applicationinsights.azure.com/;LiveEndpoint=https://northeurope.livediagnostics.monitor.azure.com/"
    DEFINITION_PATHS_ENABLED: "false"
    ACTIVE_ESTABLISHMENTS: "EXI,BNI,LYI,EEI,VEI,CWI,WCI,AYI,BLI,GNI,PDI,SPI"
    MAINTENANCE_MODE_ENABLED: "false"
    MAINTENANCE_MODE_MESSAGE: ""

  # Pre-existing kubernetes secrets to load as environment variables in the deployment.
  # namespace_secrets:
  #   [name of kubernetes secret]:
  #     [name of environment variable as seen by app]: [key of kubernetes secret to load]

  namespace_secrets:
    hmpps-digital-prison-reporting-mi-ui-ec-cluster-output:
      REDIS_HOST: "primary_endpoint_address"
      REDIS_AUTH_TOKEN: "auth_token"
    ui-session-secret:
      SESSION_SECRET: "session_secret"
    hmpps-auth:
      API_CLIENT_ID: "api_client_id"
      API_CLIENT_SECRET: "api_client_secret"
      SYSTEM_CLIENT_ID: "system_client_id"
      SYSTEM_CLIENT_SECRET: "system_client_secret"
    hmpps-digital-prison-reporting-mi-ui:
      APPINSIGHTS_INSTRUMENTATIONKEY: "APPINSIGHTS_INSTRUMENTATIONKEY"

  allowlist:
    hmp-parc-1: 217.161.76.162/32
    hmp-parc-2: 217.161.76.154/32
    groups:
      - internal
      - prisons
      - private_prisons

generic-prometheus-alerts:
  targetApplication: hmpps-digital-prison-reporting-mi-ui
